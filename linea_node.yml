---
- name: Manage a Linea testnet node
  hosts: localhost
  become: true
  vars_prompt:
    - name: node_action
      prompt: "Enter the action to perform (install, remove)"
      private: false
  vars:
    working_directory: "{{ ansible_env.HOME }}/linea_data"
    genesis_file_url: "https://docs.linea.build/files/geth/mainnet/genesis.json"
    linea_service_template: "linea-node.service.j2"
    linea_service_name: "linea-node.service"

  tasks:
    - name: Install system dependencies
      ansible.builtin.apt:
        name:
          - software-properties-common
          - screen
        state: present
      when: node_action == "install"

    - name: Create Linea data directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/linea_data"
        state: directory
        mode: '0755'
      when: node_action == "install"

    - name: Remove existing Geth if installed
      ansible.builtin.apt:
        name: geth
        state: absent
      when: node_action == "install"

    - name: Download and install Geth 1.13.x
      block:
        - name: Download Geth
          ansible.builtin.get_url:
            url: "https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-1.13.15-c5ba367e.tar.gz"
            dest: "/tmp/geth-linux-amd64-1.13.15-c5ba367e.tar.gz"
        - name: Extract Geth
          ansible.builtin.unarchive:
            src: "/tmp/geth-linux-amd64-1.13.15-c5ba367e.tar.gz"
            dest: "/tmp/"
            remote_src: yes
        - name: Move Geth binary
          ansible.builtin.command:
            cmd: mv /tmp/geth-linux-amd64-1.13.15-c5ba367e/geth /usr/bin/geth
      when: node_action == "install"

    - name: Download genesis.json file
      ansible.builtin.get_url:
        url: "{{ genesis_file_url }}"
        dest: "{{ working_directory }}/genesis.json"
      when: node_action == "install"

    - name: Initialize Linea blockchain data
      ansible.builtin.command:
        cmd: geth --datadir {{ working_directory }} init {{ working_directory }}/genesis.json
      when: node_action == "install"

    - name: Create Linea node service template
      ansible.builtin.template:
        src: "{{ linea_service_template }}"
        dest: "/etc/systemd/system/{{ linea_service_name }}"
      when: node_action == "install"

    - name: Reload systemd manager configuration
      ansible.builtin.systemd:
        daemon_reload: true
      when: node_action == "install"

    - name: Enable Linea node service
      ansible.builtin.systemd:
        name: "{{ linea_service_name }}"
        enabled: true
        state: stopped
      when: node_action == "install"

    - name: Remove Linea node
      block:
        - name: Stop and disable Linea node service
          ansible.builtin.systemd:
            name: "{{ linea_service_name }}"
            state: stopped
            enabled: false
        - name: Remove Linea data directory and configurations
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "{{ working_directory }}"
            - "/etc/systemd/system/{{ linea_service_name }}"
      when: node_action == "remove"
